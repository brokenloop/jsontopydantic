version: 2.1

orbs:
  python: circleci/python@0.3.2
  aws-cli: circleci/aws-cli@1.2.1

jobs:
  build-and-test-server:
    executor:
      name: python/default
      tag: "3.10"
    steps:
      - checkout
      - run:
          name: Setup Virtual env
          command: |
            virtualenv -p python3.10 env
            echo "source ./env/bin/activate" >> $BASH_ENV
      - run:
          name: Install Dependencies
          command: pip install -r server/requirements.txt
      - run:
          name: Create ENV file
          command: env > .env
      - run:
          name: Test
          command: pytest
      - run:
          name: Create Zipfile archive of Dependencies
          command: |
            cd env/lib/python3.10/site-packages
            zip -r9 ../../../../function.zip .
      - run:
          name: Add App to Zipfile
          command: |
            cd server
            zip -g ../function.zip .env -r app
      - persist_to_workspace:
          root: .
          paths:
            - function.zip

  deploy-server-prod:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Upload to S3
          command: aws s3 cp function.zip s3://pydantic-generator-server/function.zip
      - run:
          name: Deploy new Lambda
          command: aws lambda update-function-code --function-name pydantic-generator-lambda --s3-bucket pydantic-generator-server --s3-key function.zip

  build-client:
    docker:
      - image: circleci/node:12.9.1-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            cd client
            npm install
      - run:
          name: Build
          command: |
            cd client
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - client/build

  deploy-client-prod:
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: ./
      - aws-cli/setup:
          aws-region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Upload to S3
          command: |
            cd client/build
            aws s3 sync . "s3://pydantic-generator-client/"

workflows:
  build-test-and-deploy:
    jobs:
      - build-and-test-server:
          filters:
            branches:
              only:
                - deploy

      - deploy-server-prod:
          context: jsontopydantic-prod
          requires:
            - build-and-test-server
          filters:
            branches:
              only:
                - deploy

      - build-client:
          requires:
            - deploy-server-prod
          filters:
            branches:
              only:
                - deploy

      - deploy-client-prod:
          context: jsontopydantic-prod
          requires:
            - build-client
          filters:
            branches:
              only:
                - deploy
# https://www.deadbearcode.com/serverless-fastapi-cicd/

