[{"/home/daniel/dev/pydantic-generator/client/pygen-client/src/reportWebVitals.ts":"1","/home/daniel/dev/pydantic-generator/client/pygen-client/src/App.tsx":"2","/home/daniel/dev/pydantic-generator/client/pygen-client/src/index.tsx":"3"},{"size":425,"mtime":1606668460250,"results":"4","hashOfConfig":"5"},{"size":2983,"mtime":1606700317174,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606668460246,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ixfzcf",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/daniel/dev/pydantic-generator/client/pygen-client/src/reportWebVitals.ts",[],"/home/daniel/dev/pydantic-generator/client/pygen-client/src/App.tsx",["15"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nconst apiUrl = \"https://ufgjji253b.execute-api.us-east-1.amazonaws.com/prod\";\nconst loadingMessage = \"# loading...\";\nconst invalidJsonMessage = \"# invalid json\";\n\ntype RequestBody = {\n  data: string;\n};\n\nfunction App() {\n  const [jsonObject, setJsonObject] = useState('{\\n\\t\"foo\": 5 \\n}');\n  const [pydanticModel, setPydanticModel] = useState(\"\");\n\n  useEffect(() => {\n    fetchConversion();\n  }, [jsonObject]);\n\n  function onChange(newValue: string) {\n    console.log(newValue);\n    setJsonObject(newValue);\n  }\n\n  function fetchConversion() {\n    setPydanticModel(loadingMessage);\n    const requestBody: RequestBody = { data: jsonObject };\n    const url = new URL(apiUrl);\n    const opts = {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n    };\n\n    fetch(url.toString(), opts)\n      .then((response) => {\n        if (response.status === 422) {\n          setPydanticModel(invalidJsonMessage);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setPydanticModel(data.model);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>JSON to Pydantic Converter</h1>\n      <div className=\"editor-container\">\n        <div className=\"editor\">\n          <h3>JSON</h3>\n          <AceEditor\n            value={jsonObject}\n            mode=\"json\"\n            theme=\"monokai\"\n            onChange={onChange}\n            name=\"json-editor\"\n            editorProps={{ $blockScrolling: true }}\n          />\n        </div>\n        <div className=\"editor\">\n          <h3>Pydantic</h3>\n          <AceEditor\n            value={pydanticModel}\n            mode=\"python\"\n            theme=\"monokai\"\n            name=\"python-editor\"\n            editorProps={{ $blockScrolling: true }}\n          />\n        </div>\n      </div>\n      <br></br>\n      <div className=\"about\">\n        <h2>What is this?</h2>\n        <p>\n          JSON to Pydantic is a tool that lets you convert JSON objects into\n          Pydantic models. <a href=\"https://www.json.org/json-en.html\">JSON</a>{\" \"}\n          is the de-facto data interchange format of the internet, and{\" \"}\n          <a href=\"https://pydantic-docs.helpmanual.io/\">Pydantic</a>\n          is a library that makes parsing JSON in Python a breeze.\n        </p>\n        <p>\n          To convert your JSON into a Pydantic model, enter it into the JSON\n          editor to the left and watch a Pydantic model automagically appear in\n          the editor on the right.\n        </p>\n        <p>\n          Pydantic models are generated via the experimental\n          <a href=\"https://github.com/koxudaxi/datamodel-code-generator\">\n            datamodel-code-generator\n          </a>\n          .\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/daniel/dev/pydantic-generator/client/pygen-client/src/index.tsx",[],{"ruleId":"16","severity":1,"message":"17","line":23,"column":6,"nodeType":"18","endLine":23,"endColumn":18,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchConversion'. Either include it or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [fetchConversion, jsonObject]",{"range":"23","text":"24"},[650,662],"[fetchConversion, jsonObject]"]